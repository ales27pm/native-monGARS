import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { SimpleNavigator } from './SimpleNavigator';\n\n// Try to import screens with fallback\ntry {\n  var HomeScreen = require('../screens/HomeScreen').default;\n  var ChatScreen = require('../screens/ChatScreen').default;\n  var VoiceScreen = require('../screens/VoiceScreen').default;\n  var ToolsScreen = require('../screens/ToolsScreen').default;\n  var SettingsScreen = require('../screens/SettingsScreen').default;\n} catch (error) {\n  console.warn('Could not load complex screens, using simple navigator');\n}\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction TabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof Ionicons.glyphMap;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Chat') {\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n          } else if (route.name === 'Voice') {\n            iconName = focused ? 'mic' : 'mic-outline';\n          } else if (route.name === 'Tools') {\n            iconName = focused ? 'construct' : 'construct-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          } else {\n            iconName = 'ellipse-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#007AFF',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Chat\" component={ChatScreen} />\n      <Tab.Screen name=\"Voice\" component={VoiceScreen} />\n      <Tab.Screen name=\"Tools\" component={ToolsScreen} />\n      <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n    </Tab.Navigator>\n  );\n}\n\nexport function AppNavigator() {\n  // Use SimpleNavigator if complex screens failed to load\n  if (!HomeScreen || !ChatScreen || !VoiceScreen || !ToolsScreen || !SettingsScreen) {\n    return <SimpleNavigator />;\n  }\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Main\" component={TabNavigator} />\n    </Stack.Navigator>\n  );\n}\n\nexport default AppNavigator;\n"