import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  ScrollView,\n  Alert,\n  Switch,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAgent } from '../hooks/useAgent';\nimport { useRAG } from '../hooks/useRAG';\n\nexport default function SettingsScreen() {\n  const { getAgentStats, getVoiceStats } = useAgent();\n  const { clearDatabase, refreshStats, stats } = useRAG();\n  const [agentStats, setAgentStats] = useState<any>(null);\n  const [voiceStats, setVoiceStats] = useState<any>(null);\n  const [privacyMode, setPrivacyMode] = useState(true);\n  const [autoIndex, setAutoIndex] = useState(false);\n\n  useEffect(() => {\n    loadStats();\n    const interval = setInterval(loadStats, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadStats = () => {\n    try {\n      setAgentStats(getAgentStats());\n      setVoiceStats(getVoiceStats());\n    } catch (error) {\n      console.warn('Failed to load stats:', error);\n    }\n  };\n\n  const SettingItem = ({ title, description, rightComponent, onPress, disabled = false }: any) => (\n    <Pressable\n      onPress={onPress}\n      disabled={disabled || !onPress}\n      className={`bg-white rounded-2xl p-4 mb-3 shadow-sm border border-gray-100 ${\n        disabled ? 'opacity-50' : onPress ? 'active:bg-gray-50' : ''\n      }`}\n    >\n      <View className=\"flex-row items-center justify-between\">\n        <View className=\"flex-1 mr-4\">\n          <Text className=\"text-gray-900 font-medium\">{title}</Text>\n          {description && (\n            <Text className=\"text-gray-500 text-sm mt-1\">{description}</Text>\n          )}\n        </View>\n        {rightComponent}\n      </View>\n    </Pressable>\n  );\n\n  const StatCard = ({ title, value, description, icon, color }: any) => (\n    <View className=\"bg-white rounded-2xl p-4 shadow-sm border border-gray-100 mb-3\">\n      <View className=\"flex-row items-center justify-between\">\n        <View className=\"flex-1\">\n          <Text className=\"text-gray-600 text-sm\">{title}</Text>\n          <Text className=\"text-gray-900 font-bold text-2xl\">{value}</Text>\n          {description && (\n            <Text className=\"text-gray-500 text-xs mt-1\">{description}</Text>\n          )}\n        </View>\n        <View className={`w-12 h-12 rounded-full ${color} items-center justify-center`}>\n          <Ionicons name={icon} size={24} color=\"white\" />\n        </View>\n      </View>\n    </View>\n  );\n\n  const handleClearRAGDatabase = () => {\n    Alert.alert(\n      'Clear RAG Database',\n      'This will permanently delete all indexed documents. This action cannot be undone.',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Clear',\n          style: 'destructive',\n          onPress: async () => {\n            try {\n              const success = await clearDatabase();\n              if (success) {\n                Alert.alert('Success', 'RAG database cleared successfully.');\n                await refreshStats();\n              } else {\n                Alert.alert('Error', 'Failed to clear RAG database.');\n              }\n            } catch (error) {\n              Alert.alert('Error', 'Failed to clear RAG database.');\n            }\n          }\n        }\n      ]\n    );\n  };\n\n  const handleResetSystem = () => {\n    Alert.alert(\n      'Reset System',\n      'This will reset all settings and clear cached data. The app will need to reinitialize.',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Reset',\n          style: 'destructive',\n          onPress: () => {\n            Alert.alert('Reset', 'System reset functionality would be implemented here.');\n          }\n        }\n      ]\n    );\n  };\n\n  const handleExportData = () => {\n    Alert.alert(\n      'Export Data',\n      'Export your indexed documents and settings to a file.',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Export',\n          onPress: () => {\n            Alert.alert('Export', 'Data export functionality would be implemented here.');\n          }\n        }\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView className=\"flex-1 bg-gray-50\">\n      <ScrollView className=\"flex-1 px-4\">\n        {/* Header */}\n        <View className=\"pt-6 pb-4\">\n          <Text className=\"text-3xl font-bold text-gray-900\">Settings</Text>\n          <Text className=\"text-gray-500 mt-1\">Configure your AI assistant</Text>\n        </View>\n\n        {/* System Statistics */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">System Statistics</Text>\n          \n          <StatCard\n            title=\"Documents Indexed\"\n            value={stats?.documentCount || 0}\n            description=\"Total documents in RAG system\"\n            icon=\"documents-outline\"\n            color=\"bg-blue-500\"\n          />\n          \n          <View className=\"flex-row space-x-3\">\n            <View className=\"flex-1\">\n              <StatCard\n                title=\"Agent Tools\"\n                value={agentStats?.toolCount || 0}\n                description=\"Available tools\"\n                icon=\"construct-outline\"\n                color=\"bg-green-500\"\n              />\n            </View>\n            <View className=\"flex-1\">\n              <StatCard\n                title=\"Processing Steps\"\n                value={agentStats?.maxSteps || 0}\n                description=\"Max reasoning steps\"\n                icon=\"git-branch-outline\"\n                color=\"bg-purple-500\"\n              />\n            </View>\n          </View>\n        </View>\n\n        {/* Privacy & Security */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Privacy & Security</Text>\n          \n          <SettingItem\n            title=\"Privacy Mode\"\n            description=\"Keep all processing on-device\"\n            rightComponent={\n              <Switch\n                value={privacyMode}\n                onValueChange={setPrivacyMode}\n                trackColor={{ false: '#D1D5DB', true: '#3B82F6' }}\n                thumbColor={privacyMode ? '#FFFFFF' : '#F3F4F6'}\n              />\n            }\n          />\n          \n          <SettingItem\n            title=\"Voice Privacy\"\n            description={voiceStats?.hasNativeModule ? 'Using native speech recognition' : 'Using fallback speech recognition'}\n            rightComponent={\n              <View className=\"flex-row items-center\">\n                <View className={`w-2 h-2 rounded-full mr-2 ${\n                  voiceStats?.hasNativeModule ? 'bg-green-500' : 'bg-orange-500'\n                }`} />\n                <Text className=\"text-gray-600 text-sm\">\n                  {voiceStats?.hasNativeModule ? 'Native' : 'Fallback'}\n                </Text>\n              </View>\n            }\n          />\n          \n          <SettingItem\n            title=\"LLM Processing\"\n            description={agentStats?.initialized ? 'On-device LLM ready' : 'Initializing...'}\n            rightComponent={\n              <View className=\"flex-row items-center\">\n                <View className={`w-2 h-2 rounded-full mr-2 ${\n                  agentStats?.initialized ? 'bg-green-500' : 'bg-orange-500'\n                }`} />\n                <Text className=\"text-gray-600 text-sm\">\n                  {agentStats?.initialized ? 'Ready' : 'Loading'}\n                </Text>\n              </View>\n            }\n          />\n        </View>\n\n        {/* AI Configuration */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">AI Configuration</Text>\n          \n          <SettingItem\n            title=\"Auto-Index Documents\"\n            description=\"Automatically index viewed documents\"\n            rightComponent={\n              <Switch\n                value={autoIndex}\n                onValueChange={setAutoIndex}\n                trackColor={{ false: '#D1D5DB', true: '#3B82F6' }}\n                thumbColor={autoIndex ? '#FFFFFF' : '#F3F4F6'}\n              />\n            }\n          />\n          \n          <SettingItem\n            title=\"Wake Word Sensitivity\"\n            description=\"Adjust wake word detection sensitivity\"\n            rightComponent={\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#9CA3AF\" />\n            }\n            onPress={() => Alert.alert('Settings', 'Wake word sensitivity settings would be implemented here.')}\n          />\n          \n          <SettingItem\n            title=\"Response Length\"\n            description=\"Configure AI response length preference\"\n            rightComponent={\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#9CA3AF\" />\n            }\n            onPress={() => Alert.alert('Settings', 'Response length settings would be implemented here.')}\n          />\n        </View>\n\n        {/* Data Management */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Data Management</Text>\n          \n          <SettingItem\n            title=\"Export Data\"\n            description=\"Export indexed documents and settings\"\n            rightComponent={\n              <Ionicons name=\"download-outline\" size={20} color=\"#6B7280\" />\n            }\n            onPress={handleExportData}\n          />\n          \n          <SettingItem\n            title=\"Clear RAG Database\"\n            description=\"Remove all indexed documents\"\n            rightComponent={\n              <Ionicons name=\"trash-outline\" size={20} color=\"#EF4444\" />\n            }\n            onPress={handleClearRAGDatabase}\n          />\n        </View>\n\n        {/* Advanced */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Advanced</Text>\n          \n          <SettingItem\n            title=\"Model Information\"\n            description=\"View loaded model details\"\n            rightComponent={\n              <Ionicons name=\"information-circle-outline\" size={20} color=\"#6B7280\" />\n            }\n            onPress={() => {\n              const info = [\n                `Agent Initialized: ${agentStats?.initialized ? 'Yes' : 'No'}`,\n                `Voice Module: ${voiceStats?.hasNativeModule ? 'Native' : 'Fallback'}`,\n                `Wake Word: ${voiceStats?.wakeWordEnabled ? 'Enabled' : 'Disabled'}`,\n                `Tools Available: ${agentStats?.toolCount || 0}`,\n                `Max Steps: ${agentStats?.maxSteps || 0}`\n              ].join('\\n');\n              Alert.alert('Model Information', info);\n            }}\n          />\n          \n          <SettingItem\n            title=\"Debug Logs\"\n            description=\"View system debug information\"\n            rightComponent={\n              <Ionicons name=\"bug-outline\" size={20} color=\"#6B7280\" />\n            }\n            onPress={() => Alert.alert('Debug', 'Debug logs would be displayed here.')}\n          />\n          \n          <SettingItem\n            title=\"Reset System\"\n            description=\"Reset all settings and clear cache\"\n            rightComponent={\n              <Ionicons name=\"refresh-outline\" size={20} color=\"#EF4444\" />\n            }\n            onPress={handleResetSystem}\n          />\n        </View>\n\n        {/* About */}\n        <View className=\"mb-8\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">About</Text>\n          \n          <View className=\"bg-white rounded-2xl p-4 shadow-sm border border-gray-100\">\n            <Text className=\"text-gray-900 font-semibold text-lg mb-2\">monGARS AI Assistant</Text>\n            <Text className=\"text-gray-600 text-sm mb-3\">\n              Privacy-first AI assistant with on-device processing, RAG capabilities, and comprehensive tool integration.\n            </Text>\n            \n            <View className=\"space-y-2\">\n              <View className=\"flex-row justify-between\">\n                <Text className=\"text-gray-500 text-sm\">Version</Text>\n                <Text className=\"text-gray-900 text-sm font-medium\">1.0.0</Text>\n              </View>\n              <View className=\"flex-row justify-between\">\n                <Text className=\"text-gray-500 text-sm\">Build</Text>\n                <Text className=\"text-gray-900 text-sm font-medium\">Production</Text>\n              </View>\n              <View className=\"flex-row justify-between\">\n                <Text className=\"text-gray-500 text-sm\">Architecture</Text>\n                <Text className=\"text-gray-900 text-sm font-medium\">On-Device</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n"