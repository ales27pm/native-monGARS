import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  Alert,\n  ScrollView,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAgent } from '../hooks/useAgent';\n\nexport default function VoiceScreen() {\n  const {\n    startListening,\n    stopListening,\n    isListening,\n    transcription,\n    lastResponse,\n    setWakeWordEnabled,\n    getVoiceStats,\n    error,\n    clearError,\n  } = useAgent();\n\n  const [wakeWordEnabled, setWakeWordEnabledState] = useState(true);\n  const [voiceStats, setVoiceStats] = useState<any>(null);\n\n  useEffect(() => {\n    const loadStats = () => {\n      try {\n        const stats = getVoiceStats();\n        setVoiceStats(stats);\n      } catch (error) {\n        console.warn('Failed to load voice stats:', error);\n      }\n    };\n\n    loadStats();\n    const interval = setInterval(loadStats, 2000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert('Voice Error', error, [{ text: 'OK', onPress: clearError }]);\n    }\n  }, [error]);\n\n  const handleStartListening = async () => {\n    try {\n      const success = await startListening();\n      if (!success) {\n        Alert.alert('Error', 'Failed to start voice recognition. Please check microphone permissions.');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to start voice recognition.');\n    }\n  };\n\n  const handleStopListening = async () => {\n    try {\n      await stopListening();\n    } catch (error) {\n      Alert.alert('Error', 'Failed to stop voice recognition.');\n    }\n  };\n\n  const handleToggleWakeWord = async () => {\n    const newValue = !wakeWordEnabled;\n    setWakeWordEnabledState(newValue);\n    try {\n      await setWakeWordEnabled(newValue);\n    } catch (error) {\n      Alert.alert('Error', 'Failed to toggle wake word detection.');\n      setWakeWordEnabledState(!newValue); // Revert on error\n    }\n  };\n\n  const StatusCard = ({ title, value, icon, color }: any) => (\n    <View className=\"bg-white rounded-2xl p-4 shadow-sm border border-gray-100 flex-1 mr-3 last:mr-0\">\n      <View className=\"flex-row items-center justify-between\">\n        <View>\n          <Text className=\"text-gray-500 text-sm\">{title}</Text>\n          <Text className=\"text-gray-900 font-semibold text-lg\">{value}</Text>\n        </View>\n        <View className={`w-10 h-10 rounded-full ${color} items-center justify-center`}>\n          <Ionicons name={icon} size={20} color=\"white\" />\n        </View>\n      </View>\n    </View>\n  );\n\n  return (\n    <SafeAreaView className=\"flex-1 bg-gray-50\">\n      <ScrollView className=\"flex-1 px-4\">\n        {/* Header */}\n        <View className=\"pt-6 pb-4\">\n          <Text className=\"text-3xl font-bold text-gray-900\">Voice Assistant</Text>\n          <Text className=\"text-gray-500 mt-1\">\n            {isListening ? 'Listening for your voice...' : 'Tap to start voice interaction'}\n          </Text>\n        </View>\n\n        {/* Main Voice Button */}\n        <View className=\"items-center mb-8\">\n          <Pressable\n            onPress={isListening ? handleStopListening : handleStartListening}\n            className={`w-32 h-32 rounded-full items-center justify-center shadow-lg active:scale-95 ${\n              isListening ? 'bg-red-500' : 'bg-blue-500'\n            }`}\n          >\n            <Ionicons\n              name={isListening ? 'stop' : 'mic'}\n              size={48}\n              color=\"white\"\n            />\n          </Pressable>\n          <Text className=\"text-gray-600 mt-4 text-center\">\n            {isListening ? 'Tap to stop listening' : 'Tap to start listening'}\n          </Text>\n        </View>\n\n        {/* Status Cards */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Voice Status</Text>\n          <View className=\"flex-row\">\n            <StatusCard\n              title=\"Status\"\n              value={isListening ? 'Listening' : 'Ready'}\n              icon={isListening ? 'radio' : 'radio-outline'}\n              color={isListening ? 'bg-green-500' : 'bg-gray-500'}\n            />\n            <StatusCard\n              title=\"Wake Word\"\n              value={wakeWordEnabled ? 'On' : 'Off'}\n              icon={wakeWordEnabled ? 'ear' : 'ear-outline'}\n              color={wakeWordEnabled ? 'bg-purple-500' : 'bg-gray-500'}\n            />\n          </View>\n        </View>\n\n        {/* Transcription */}\n        {(transcription.partial || transcription.final) && (\n          <View className=\"mb-6\">\n            <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Transcription</Text>\n            <View className=\"bg-white rounded-2xl p-4 shadow-sm border border-gray-100\">\n              {transcription.final && (\n                <View className=\"mb-3\">\n                  <Text className=\"text-gray-600 text-sm mb-1\">Final:</Text>\n                  <Text className=\"text-gray-900 font-medium\">{transcription.final}</Text>\n                </View>\n              )}\n              {transcription.partial && (\n                <View>\n                  <Text className=\"text-gray-600 text-sm mb-1\">Partial:</Text>\n                  <Text className=\"text-gray-500 italic\">{transcription.partial}</Text>\n                </View>\n              )}\n            </View>\n          </View>\n        )}\n\n        {/* Last Response */}\n        {lastResponse && (\n          <View className=\"mb-6\">\n            <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Assistant Response</Text>\n            <View className=\"bg-blue-50 rounded-2xl p-4 border border-blue-100\">\n              <Text className=\"text-blue-900\">{lastResponse}</Text>\n            </View>\n          </View>\n        )}\n\n        {/* Settings */}\n        <View className=\"mb-6\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Voice Settings</Text>\n          <View className=\"bg-white rounded-2xl shadow-sm border border-gray-100\">\n            <Pressable\n              onPress={handleToggleWakeWord}\n              className=\"flex-row items-center justify-between p-4 active:bg-gray-50\"\n            >\n              <View className=\"flex-row items-center\">\n                <Ionicons name=\"ear-outline\" size={24} color=\"#6B7280\" />\n                <View className=\"ml-3\">\n                  <Text className=\"text-gray-900 font-medium\">Wake Word Detection</Text>\n                  <Text className=\"text-gray-500 text-sm\">\n                    Listen for wake word to start conversation\n                  </Text>\n                </View>\n              </View>\n              <View className={`w-12 h-6 rounded-full p-1 ${\n                wakeWordEnabled ? 'bg-blue-500' : 'bg-gray-300'\n              }`}>\n                <View className={`w-4 h-4 rounded-full bg-white transition-all ${\n                  wakeWordEnabled ? 'translate-x-6' : 'translate-x-0'\n                }`} />\n              </View>\n            </Pressable>\n          </View>\n        </View>\n\n        {/* Voice Statistics */}\n        {voiceStats && (\n          <View className=\"mb-6\">\n            <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Technical Information</Text>\n            <View className=\"bg-white rounded-2xl p-4 shadow-sm border border-gray-100\">\n              <View className=\"space-y-2\">\n                <View className=\"flex-row justify-between\">\n                  <Text className=\"text-gray-600\">Initialized</Text>\n                  <Text className={`font-semibold ${\n                    voiceStats.initialized ? 'text-green-500' : 'text-red-500'\n                  }`}>\n                    {voiceStats.initialized ? 'Yes' : 'No'}\n                  </Text>\n                </View>\n                <View className=\"flex-row justify-between\">\n                  <Text className=\"text-gray-600\">Native Module</Text>\n                  <Text className={`font-semibold ${\n                    voiceStats.hasNativeModule ? 'text-green-500' : 'text-orange-500'\n                  }`}>\n                    {voiceStats.hasNativeModule ? 'Available' : 'Fallback'}\n                  </Text>\n                </View>\n                <View className=\"flex-row justify-between\">\n                  <Text className=\"text-gray-600\">Wake Word</Text>\n                  <Text className={`font-semibold ${\n                    voiceStats.wakeWordEnabled ? 'text-green-500' : 'text-gray-500'\n                  }`}>\n                    {voiceStats.wakeWordEnabled ? 'Enabled' : 'Disabled'}\n                  </Text>\n                </View>\n              </View>\n            </View>\n          </View>\n        )}\n\n        {/* Usage Tips */}\n        <View className=\"mb-8\">\n          <Text className=\"text-lg font-semibold text-gray-900 mb-3\">Usage Tips</Text>\n          <View className=\"bg-green-50 rounded-2xl p-4 border border-green-100\">\n            <View className=\"space-y-2\">\n              <View className=\"flex-row items-start\">\n                <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" className=\"mt-1\" />\n                <Text className=\"text-green-800 text-sm ml-2 flex-1\">\n                  Speak clearly and at a normal pace for best recognition\n                </Text>\n              </View>\n              <View className=\"flex-row items-start\">\n                <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" className=\"mt-1\" />\n                <Text className=\"text-green-800 text-sm ml-2 flex-1\">\n                  Enable wake word detection for hands-free interaction\n                </Text>\n              </View>\n              <View className=\"flex-row items-start\">\n                <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" className=\"mt-1\" />\n                <Text className=\"text-green-800 text-sm ml-2 flex-1\">\n                  Use in a quiet environment for better accuracy\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n"